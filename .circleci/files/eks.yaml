Description: >
  UdaPeople backend stack.

Parameters:
  ID:
    Description: Unique identifier.
    Type: String

Resources:
  ControlPlaneSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub Capstone-${ID}
      GroupDescription: Allow port 22 and port 3030.
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 3111
          ToPort: 3111
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  EKSIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - eks.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      RoleName: !Ref EKSIAMRoleName
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
        - arn:aws:iam::aws:policy/AmazonEKSServicePolicy
  myCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: capstone-cluster
      Version: '1.19'
      RoleArn: >-
        "Fn::GetAtt": ["EKSIAMRole", "Arn"]
      ResourcesVpcConfig:
        SecurityGroupIds:
          - Ref: ControlPlaneSecurityGroup
        SubnetIds:
          - subnet-77a7f428
          - subnet-afaef8c9
          - subnet-c7227ee6
        Tags:
        - Key: Name
          Value: !Sub capstone-cluster-${ID}
    DependsOn: [EKSIAMRole, ControlPlaneSecurityGroup]

  Outputs:
    SecurityGroups:
      Description: Security group for the cluster control plane communication with worker nodes
      Value: !Join [ ",", [ !Ref ControlPlaneSecurityGroup ] ]
    VpcId:
      Description: The VPC Id
      Value: !Ref VPC